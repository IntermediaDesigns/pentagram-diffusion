---
---

<script>
  const imageGallery = document.getElementById("imageGallery") as HTMLElement;

  if (!imageGallery) {
    console.error('Image gallery element not found');
    throw new Error('Image gallery element not found');
  }

  interface Image {
    id: string;
    url: string;
    prompt: string;
    createdAt: string;
    likes: number;
    comments: Array<{
      userId: string;
      text: string;
      createdAt: string;
    }>;
    userId: string;
  }

  async function handleLike(imageId: string) {
    try {
      await fetch("/api/images", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ imageId, action: "like" }),
      });
      await loadImages();
    } catch (error) {
      console.error("Error liking image:", error);
    }
  }

  async function loadImages() {
    try {
      const response = await fetch("/api/images");
      const images = await response.json() as Image[];

      imageGallery.innerHTML = images
        .map(
          (image) => `
          <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="p-4 border-b">
              <div class="flex items-center">
                <div class="h-8 w-8 rounded-full bg-gray-200"></div>
                <span class="ml-3 font-medium">User</span>
              </div>
            </div>
            
            <div class="relative aspect-square">
              <img 
                src="${image.url}" 
                alt="${image.prompt}" 
                class="w-full h-full object-cover"
              />
            </div>
            
            <div class="p-4">
              <div class="flex items-center gap-4 mb-4">
                <button
                  onclick="handleLike('${image.id}')"
                  class="flex items-center gap-1 text-gray-700 hover:text-red-500"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                  <span>${image.likes}</span>
                </button>
                <button class="flex items-center gap-1 text-gray-700 hover:text-blue-500">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                  </svg>
                  <span>${image.comments.length}</span>
                </button>
              </div>
              
              <p class="text-sm text-gray-600 mb-2">
                <span class="font-medium">Prompt:</span> ${image.prompt}
              </p>
              
              <div class="space-y-2">
                ${image.comments.slice(0, 2).map(comment => `
                  <p class="text-sm">
                    <span class="font-medium">User</span>
                    ${comment.text}
                  </p>
                `).join('')}
                ${image.comments.length > 2 ? `
                  <button class="text-gray-500 text-sm">
                    View all ${image.comments.length} comments
                  </button>
                ` : ''}
              </div>
              
              <p class="text-xs text-gray-500 mt-2">
                ${new Date(image.createdAt).toLocaleDateString()}
              </p>
            </div>
          </div>
        `
        )
        .join("");
    } catch (error) {
      console.error("Error loading images:", error);
    }
  }

  // Load images on page load
  loadImages();

  // Refresh gallery when new image is generated
  window.addEventListener("refreshGallery", () => loadImages());
</script>

<div class="bg-white p-6 rounded-lg shadow-md">
  <h2 class="text-xl font-semibold mb-4">Your Generated Images</h2>
  <div
    id="imageGallery"
    class="grid grid-cols-1 max-w-xl mx-auto gap-8"
  >
    <!-- Images will be loaded here dynamically -->
  </div>
</div>
