---
import Layout from '../layouts/Layout.astro';
import { AppwriteService } from '../server/appwrite';

// Check authentication
const appwrite = new AppwriteService();
const user = await appwrite.getCurrentUser();

// Redirect if not logged in
if (!user) {
  return Astro.redirect('/login');
}
---

<Layout title="Dashboard | PicFusion">
  <main class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 gap-8">
      <!-- Image Generation Form -->
      <section class="bg-white rounded-lg shadow p-6">
        <h2 class="text-2xl font-bold mb-4">Generate New Image</h2>
        <form id="generateForm" class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700">Prompt</label>
            <textarea 
              id="prompt"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              rows="3"
              required
            ></textarea>
          </div>
          <button
            type="submit"
            class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          >
            Generate Image
          </button>
        </form>
        <div id="generationStatus" class="mt-4 hidden">
          <div class="animate-pulse">Generating image...</div>
        </div>
      </section>

      <!-- Generated Images Gallery -->
      <section class="bg-white rounded-lg shadow p-6">
        <h2 class="text-2xl font-bold mb-4">Your Generated Images</h2>
        <div id="imageGallery" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <!-- Images will be populated here -->
        </div>
      </section>
    </div>
  </main>
</Layout>

<script>
  const generateForm = document.getElementById('generateForm');
  const generationStatus = document.getElementById('generationStatus');
  const imageGallery = document.getElementById('imageGallery');

  generateForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const prompt = document.getElementById('prompt').value;
    
    generationStatus.classList.remove('hidden');
    
    try {
      const response = await fetch('/api/generate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });
      
      const data = await response.json();
      
      if (data.image) {
        addImageToGallery(data.image, prompt);
      }
    } catch (error) {
      console.error('Error generating image:', error);
    } finally {
      generationStatus.classList.add('hidden');
    }
  });

  function addImageToGallery(imageUrl, prompt) {
    const imageCard = document.createElement('div');
    imageCard.className = 'bg-gray-50 rounded-lg overflow-hidden';
    imageCard.innerHTML = `
      <img src="${imageUrl}" alt="${prompt}" class="w-full h-64 object-cover"/>
      <div class="p-4">
        <p class="text-sm text-gray-600">${prompt}</p>
      </div>
    `;
    imageGallery.insertBefore(imageCard, imageGallery.firstChild);
  }
</script>